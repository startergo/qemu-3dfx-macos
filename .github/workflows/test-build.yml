name: Test QEMU 3dfx Build (DISABLED - replaced by build-and-package.yml)

on:
  # Disabled - functionality replaced by build-and-package.yml
  workflow_dispatch:
    inputs:
      force_enable:
        description: 'Force enable this legacy workflow'
        required: false
        default: false
        type: boolean
      test_full_build:
        description: 'Run full build test (slower)'
        required: false
        default: false
        type: boolean

jobs:
  test-environment:
    name: Test Build Environment
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up environment
      run: |
        echo "HOMEBREW_NO_AUTO_UPDATE=1" >> $GITHUB_ENV
        echo "HOMEBREW_NO_INSTALL_CLEANUP=1" >> $GITHUB_ENV
        
    - name: Check Xcode tools
      run: |
        xcode-select -p
        clang --version
        git --version
        
    - name: Install Homebrew dependencies
      run: |
        # Only install essential dependencies for environment test
        brew install git wget cmake ninja meson pkg-config
        
    - name: Test environment check
      run: |
        chmod +x scripts/build-qemu-3dfx.sh
        ./scripts/build-qemu-3dfx.sh check-env
        
  test-dependencies:
    name: Test Dependency Installation
    runs-on: macos-latest
    needs: test-environment
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up environment
      run: |
        echo "HOMEBREW_NO_AUTO_UPDATE=1" >> $GITHUB_ENV
        echo "HOMEBREW_NO_INSTALL_CLEANUP=1" >> $GITHUB_ENV
        
    - name: Test dependency installation
      run: |
        chmod +x scripts/build-qemu-3dfx.sh
        
        # Test that dependencies can be installed
        ./scripts/build-qemu-3dfx.sh check-env
        
        # Verify key packages are installed
        brew list libepoxy
        brew list sdl2
        brew list meson
        pkg-config --exists epoxy
        pkg-config --exists sdl2
        
  test-source-download:
    name: Test Source Download
    runs-on: macos-latest
    needs: test-dependencies
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up environment
      run: |
        echo "HOMEBREW_NO_AUTO_UPDATE=1" >> $GITHUB_ENV
        echo "HOMEBREW_NO_INSTALL_CLEANUP=1" >> $GITHUB_ENV
        
    - name: Install minimal dependencies
      run: |
        brew install wget git cmake ninja meson pkg-config glib pixman libepoxy
        
    - name: Test QEMU source download
      run: |
        chmod +x scripts/build-qemu-3dfx.sh
        
        # Create a test script that only downloads sources
        cat > test-download.sh << 'EOF'
        #!/bin/bash
        set -e
        
        # Source the main script functions
        source ./scripts/build-qemu-3dfx.sh
        
        # Override main_build to only test downloads
        test_downloads() {
            log_info "Testing source downloads..."
            verify_environment
            get_homebrew_prefix
            download_qemu
            clone_virglrenderer
            log_success "Source download test completed!"
        }
        
        test_downloads
        EOF
        
        chmod +x test-download.sh
        ./test-download.sh
        
        # Verify sources were downloaded
        ls -la build/
        test -f build/qemu-9.2.2.tar.xz
        test -d build/qemu-9.2.2
        test -d build/virglrenderer
        
  test-patch-application:
    name: Test Patch Application
    runs-on: macos-latest
    needs: test-source-download
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up environment
      run: |
        echo "HOMEBREW_NO_AUTO_UPDATE=1" >> $GITHUB_ENV
        echo "HOMEBREW_NO_INSTALL_CLEANUP=1" >> $GITHUB_ENV
        
    - name: Install minimal dependencies
      run: |
        brew install wget git cmake ninja meson pkg-config glib pixman libepoxy
        
    - name: Test patch application
      run: |
        chmod +x scripts/build-qemu-3dfx.sh
        
        # Create a test script for patch application
        cat > test-patches.sh << 'EOF'
        #!/bin/bash
        set -e
        
        # Source the main script functions
        source ./scripts/build-qemu-3dfx.sh
        
        test_patches() {
            log_info "Testing patch application..."
            verify_environment
            get_homebrew_prefix
            download_qemu
            clone_virglrenderer
            apply_patches
            
            # Verify patches were applied
            if [ -d "build/qemu-9.2.2/hw/3dfx" ]; then
                log_success "3dfx sources copied successfully"
            else
                log_error "3dfx sources not found"
                exit 1
            fi
            
            if [ -d "build/qemu-9.2.2/hw/mesa" ]; then
                log_success "Mesa sources copied successfully"
            else
                log_error "Mesa sources not found"
                exit 1
            fi
            
            log_success "Patch application test completed!"
        }
        
        test_patches
        EOF
        
        chmod +x test-patches.sh
        ./test-patches.sh

  test-configuration:
    name: Test Build Configuration
    runs-on: macos-latest
    needs: test-patch-application
    if: github.event.inputs.test_full_build == 'true' || github.event_name == 'push'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up environment
      run: |
        echo "HOMEBREW_NO_AUTO_UPDATE=1" >> $GITHUB_ENV
        echo "HOMEBREW_NO_INSTALL_CLEANUP=1" >> $GITHUB_ENV
        
    - name: Install build dependencies
      run: |
        brew install git wget cmake ninja meson pkg-config glib pixman
        brew install sdl2 sdl2_image sdl2_net sdl2_sound sdl12-compat
        brew install libepoxy gettext libffi mt32emu python@3.12
        
    - name: Test configuration only
      run: |
        chmod +x scripts/build-qemu-3dfx.sh
        
        # Create test script for configuration
        cat > test-config.sh << 'EOF'
        #!/bin/bash
        set -e
        
        # Source the main script functions
        source ./scripts/build-qemu-3dfx.sh
        
        test_configuration() {
            log_info "Testing build configuration..."
            verify_environment
            get_homebrew_prefix
            backup_homebrew
            download_qemu
            clone_virglrenderer
            apply_patches
            build_virglrenderer
            
            # Test QEMU configuration only (no actual build)
            cd build/qemu-9.2.2
            rm -rf build
            mkdir -p build
            cd build
            
            # Set up PKG_CONFIG_PATH
            export PKG_CONFIG_PATH="${BUILD_DIR}/virglrenderer-install/lib/pkgconfig:${HOMEBREW_PREFIX}/lib/pkgconfig"
            
            # Add libepoxy path
            if [ -d "${HOMEBREW_PREFIX}/Cellar/libepoxy" ]; then
                local epoxy_version=$(ls "${HOMEBREW_PREFIX}/Cellar/libepoxy" | head -1)
                export PKG_CONFIG_PATH="${HOMEBREW_PREFIX}/Cellar/libepoxy/${epoxy_version}/lib/pkgconfig:$PKG_CONFIG_PATH"
            fi
            
            log_info "Testing QEMU configure step..."
            ../configure \
                --target-list=i386-softmmu,x86_64-softmmu,aarch64-softmmu \
                --enable-sdl \
                --enable-opengl \
                --disable-cocoa \
                --enable-virglrenderer \
                --disable-gtk \
                --disable-dbus-display \
                --disable-curses \
                --enable-vnc \
                --help > /dev/null
                
            log_success "Configuration test completed!"
        }
        
        test_configuration
        EOF
        
        chmod +x test-config.sh
        timeout 30m ./test-config.sh

  test-matrix:
    name: Test on Multiple macOS Versions
    runs-on: ${{ matrix.os }}
    needs: test-configuration
    if: github.event.inputs.test_full_build == 'true'
    
    strategy:
      matrix:
        os: [macos-12, macos-13, macos-14]
      fail-fast: false
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up environment
      run: |
        echo "HOMEBREW_NO_AUTO_UPDATE=1" >> $GITHUB_ENV
        echo "HOMEBREW_NO_INSTALL_CLEANUP=1" >> $GITHUB_ENV
        
    - name: Test environment on ${{ matrix.os }}
      run: |
        chmod +x scripts/build-qemu-3dfx.sh
        ./scripts/build-qemu-3dfx.sh check-env
        
    - name: Test dependency installation
      run: |
        # Install just essential deps for testing
        brew install git wget cmake ninja meson pkg-config libepoxy
        pkg-config --exists epoxy

  notify-results:
    name: Notify Test Results
    runs-on: ubuntu-latest
    needs: [test-environment, test-dependencies, test-source-download, test-patch-application]
    if: always()
    
    steps:
    - name: Check test results
      run: |
        echo "Test Environment: ${{ needs.test-environment.result }}"
        echo "Test Dependencies: ${{ needs.test-dependencies.result }}"
        echo "Test Source Download: ${{ needs.test-source-download.result }}"
        echo "Test Patch Application: ${{ needs.test-patch-application.result }}"
        
        if [ "${{ needs.test-environment.result }}" != "success" ] || \
           [ "${{ needs.test-dependencies.result }}" != "success" ] || \
           [ "${{ needs.test-source-download.result }}" != "success" ] || \
           [ "${{ needs.test-patch-application.result }}" != "success" ]; then
          echo "❌ Some tests failed"
          exit 1
        else
          echo "✅ All core tests passed"
        fi
